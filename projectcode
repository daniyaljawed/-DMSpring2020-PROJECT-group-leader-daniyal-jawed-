

        int[] Preform(char Operator, int[] Array1, int[] Array2)
        {
            int[] temp = new int[0];
            sort(ref Array1);
            sort(ref Array2);
            int LA1 = Array1.Length;
            int LA2 = Array2.Length;
            if (Operator == 'â‹ƒ')
            {
                return (Union(Array1, Array2, LA1, LA2));
                
            }
         

int[] Union(int[] Array1, int[] Array2, int LA1, int LA2)
        {
            int[] result = new int[LA1 + LA2];
            int index = 0, i = 0, j = 0;
            while (i < LA1 && j < LA2)
            {
                if (Array1[i] < Array2[j])
                {
                    if (Array1[i] != 0)
                    {
                        result[index++] = Array1[i++];        
                    }
                    else
                    {
                        i++;
                    }
                }
                else if (Array2[j] < Array1[i])
                {
                    if (Array2[j] != 0)
                    {
                        result[index++] = Array2[j++];
                    }
                    else
                    {
                        j++;
                    }
                }
                else
                {
                    if (Array2[j] != 0)
                    {
                        result[index++] = Array2[j++];
                        i++;
                    }
                    else
                    {
                        j++; i++;
                    }
                }
                
            }
            while (i < LA1)
            {
                if (Array1[i] != 0)
                {
                    result[index++] = Array1[i++];     
                }
                else
                {
                    i++;
                }
            }
            while (j < LA2)
            {
                if (Array2[j] != 0)
                {
                    result[index++] = Array2[j++];
                }
                else
                {
                    j++;
                }
            }
            return result;
        }
        static void sort(ref int[] Arr) {
            int n = Arr.Length;
            for (int i = 0; i < n - 1 ; i++)
            {
                int min = i;
                for (int j = i + 1; j < n; j++)
                {
                    if (Arr[j] < Arr[min])
                    {
                        min = j;
                    }
                    int temp = Arr[min];
                    Arr[min] = Arr[i];
                    Arr[i] = temp;
                }
            }
        }
